## <summary>Kana-kanji conversion server.</summary>

########################################
## <summary>
##	Connect to Canna using a unix
##	domain stream socket.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`canna_stream_connect',`
	gen_require(`
		type canna_t, canna_var_run_t;
	')

	files_search_pids($1)
	stream_connect_pattern($1, canna_var_run_t, canna_var_run_t, canna_t)
')

########################################
## <summary>
##	All of the rules required to
##	administrate an canna environment.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <param name="role">
##	<summary>
##	Role allowed access.
##	</summary>
## </param>
## <rolecap/>
#
interface(`canna_admin',`
	gen_require(`
		type canna_t, canna_log_t, canna_var_lib_t;
		type canna_var_run_t, canna_initrc_exec_t;
	')

	allow $1 canna_t:process signal_perms;
	ps_process_pattern($1, canna_t)

	tunable_policy(`deny_ptrace',`',`
		allow $1 canna_t:process ptrace;
	')

	init_labeled_script_domtrans($1, canna_initrc_exec_t)
	domain_system_change_exemption($1)
	role_transition $2 canna_initrc_exec_t system_r;
	allow $2 system_r;

	logging_list_logs($1)
	admin_pattern($1, canna_log_t)

	files_list_var_lib($1)
	admin_pattern($1, canna_var_lib_t)

	files_list_pids($1)
	admin_pattern($1, canna_var_run_t)
')
