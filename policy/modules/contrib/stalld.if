
## <summary>policy for stalld</summary>

########################################
## <summary>
##      Execute stalld_exec_t in the stalld domain.
## </summary>
## <param name="domain">
## <summary>
##      Domain allowed to transition.
## </summary>
## </param>
#
interface(`stalld_domtrans',`
        gen_require(`
                type stalld_t, stalld_exec_t;
        ')

        corecmd_search_bin($1)
        domtrans_pattern($1, stalld_exec_t, stalld_t)
')

######################################
## <summary>
##      Execute stalld in the caller domain.
## </summary>
## <param name="domain">
##      <summary>
##      Domain allowed access.
##      </summary>
## </param>
#
interface(`stalld_exec',`
        gen_require(`
                type stalld_exec_t;
        ')

        corecmd_search_bin($1)
        can_exec($1, stalld_exec_t)
')

########################################
## <summary>
##      Read stalld PID files.
## </summary>
## <param name="domain">
##      <summary>
##      Domain allowed access.
##      </summary>
## </param>
#
interface(`stalld_read_pid_files',`
        gen_require(`
                type stalld_var_run_t;
        ')

        files_search_pids($1)
        read_files_pattern($1, stalld_var_run_t, stalld_var_run_t)
')

########################################
## <summary>
##      All of the rules required to administrate
##      an stalld environment
## </summary>
## <param name="domain">
##      <summary>
##      Domain allowed access.
##      </summary>
## </param>
## <param name="role">
##      <summary>
##      Role allowed access.
##      </summary>
## </param>
## <rolecap/>
#
interface(`stalld_admin',`
        gen_require(`
                type stalld_t;
                type stalld_var_run_t;
        ')

        allow $1 stalld_t:process { signal_perms };
        ps_process_pattern($1, stalld_t)

    tunable_policy(`deny_ptrace',`',`
        allow $1 stalld_t:process ptrace;
    ')

        files_search_pids($1)
        admin_pattern($1, stalld_var_run_t)
        optional_policy(`
                systemd_passwd_agent_exec($1)
                systemd_read_fifo_file_passwd_run($1)
        ')
')
