## <summary>Ethernet activity monitor.</summary>

########################################
## <summary>
##	Execute arpwatch server in the
##	arpwatch domain.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed to transition.
##	</summary>
## </param>
#
interface(`arpwatch_initrc_domtrans',`
	gen_require(`
		type arpwatch_initrc_exec_t;
	')

	init_labeled_script_domtrans($1, arpwatch_initrc_exec_t)
')

########################################
## <summary>
##	Search arpwatch data file directories.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`arpwatch_search_data',`
	gen_require(`
		type arpwatch_data_t;
	')

	files_search_var_lib($1)
	allow $1 arpwatch_data_t:dir search_dir_perms;
')

########################################
## <summary>
##	Create, read, write, and delete
##	arpwatch data files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`arpwatch_manage_data_files',`
	gen_require(`
		type arpwatch_data_t;
	')

	files_search_var_lib($1)
	manage_files_pattern($1, arpwatch_data_t, arpwatch_data_t)
')

########################################
## <summary>
##	Read and write arpwatch temporary
##	files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`arpwatch_rw_tmp_files',`
	gen_require(`
		type arpwatch_tmp_t;
	')

	files_search_tmp($1)
	allow $1 arpwatch_tmp_t:file rw_file_perms;
')

########################################
## <summary>
##	Create, read, write, and delete
##	arpwatch temporary files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`arpwatch_manage_tmp_files',`
	gen_require(`
		type arpwatch_tmp_t;
	')

	files_search_tmp($1)
	allow $1 arpwatch_tmp_t:file manage_file_perms;
')

########################################
## <summary>
##	Do not audit attempts to read and
##	write arpwatch packet sockets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
#
interface(`arpwatch_dontaudit_rw_packet_sockets',`
	gen_require(`
		type arpwatch_t;
	')

	dontaudit $1 arpwatch_t:packet_socket { read write };
')

########################################
## <summary>
##	Execute arpwatch server in the arpwatch domain.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed to transition.
##	</summary>
## </param>
#
interface(`arpwatch_systemctl',`
	gen_require(`
		type arpwatch_t;
		type arpwatch_unit_file_t;
	')

	systemd_exec_systemctl($1)
	init_reload_services($1)
	allow $1 arpwatch_unit_file_t:file read_file_perms;
	allow $1 arpwatch_unit_file_t:service manage_service_perms;

	ps_process_pattern($1, arpwatch_t)
')

########################################
## <summary>
##	All of the rules required to
##	administrate an arpwatch environment.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <param name="role">
##	<summary>
##	Role allowed access.
##	</summary>
## </param>
## <rolecap/>
#
interface(`arpwatch_admin',`
	gen_require(`
		type arpwatch_t, arpwatch_tmp_t, arpwatch_initrc_exec_t;
		type arpwatch_data_t, arpwatch_var_run_t;
		type arpwatch_unit_file_t;
	')

	allow $1 arpwatch_t:process signal_perms;
	ps_process_pattern($1, arpwatch_t)

	tunable_policy(`deny_ptrace',`',`
		allow $1 arpwatch_t:process ptrace;
	')

	arpwatch_initrc_domtrans($1)
	domain_system_change_exemption($1)
	role_transition $2 arpwatch_initrc_exec_t system_r;
	allow $2 system_r;

	files_list_tmp($1)
	admin_pattern($1, arpwatch_tmp_t)

	files_list_var($1)
	admin_pattern($1, arpwatch_data_t)

	files_list_pids($1)
	admin_pattern($1, arpwatch_var_run_t)

	arpwatch_systemctl($1)
	admin_pattern($1, arpwatch_unit_file_t)
	allow $1 arpwatch_unit_file_t:service all_service_perms;
')

########################################
## <summary>
##	Create objects in the arpwatch home directory
##	with an automatic type transition to a specified type
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <param name="type">
##	<summary>
##	The type of the object being created.
##	</summary>
## </param>
## <param name="object">
##      <summary>
##      The class of the object being created.
##      </summary>
## </param>
## <param name="name">
##	<summary>
##	The name of the object being created.
##	</summary>
## </param>
#
interface(`arpwatch_data_filetrans',`
	gen_require(`
		type arpwatch_data_t;
	')

	filetrans_pattern($1, arpwatch_data_t, $2, $3, $4)
')
