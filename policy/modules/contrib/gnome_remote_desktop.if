
## <summary>policy for gnome_remote_desktop</summary>

########################################
## <summary>
##	Execute gnome_remote_desktop_exec_t in the gnome_remote_desktop domain.
## </summary>
## <param name="domain">
## <summary>
##	Domain allowed to transition.
## </summary>
## </param>
#
interface(`gnome_remote_desktop_domtrans',`
	gen_require(`
		type gnome_remote_desktop_t, gnome_remote_desktop_exec_t;
	')

	corecmd_search_bin($1)
	domtrans_pattern($1, gnome_remote_desktop_exec_t, gnome_remote_desktop_t)
')

######################################
## <summary>
##	Execute gnome_remote_desktop in the caller domain.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`gnome_remote_desktop_exec',`
	gen_require(`
		type gnome_remote_desktop_exec_t;
	')

	corecmd_search_bin($1)
	can_exec($1, gnome_remote_desktop_exec_t)
')

########################################
## <summary>
##	Search gnome_remote_desktop lib directories.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`gnome_remote_desktop_search_lib',`
	gen_require(`
		type gnome_remote_desktop_var_lib_t;
	')

	allow $1 gnome_remote_desktop_var_lib_t:dir search_dir_perms;
	files_search_var_lib($1)
')

########################################
## <summary>
##	Read gnome_remote_desktop lib files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`gnome_remote_desktop_read_lib_files',`
	gen_require(`
		type gnome_remote_desktop_var_lib_t;
	')

	files_search_var_lib($1)
	read_files_pattern($1, gnome_remote_desktop_var_lib_t, gnome_remote_desktop_var_lib_t)
')

########################################
## <summary>
##	Manage gnome_remote_desktop lib files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`gnome_remote_desktop_manage_lib_files',`
	gen_require(`
		type gnome_remote_desktop_var_lib_t;
	')

	files_search_var_lib($1)
	manage_files_pattern($1, gnome_remote_desktop_var_lib_t, gnome_remote_desktop_var_lib_t)
')

########################################
## <summary>
##	Manage gnome_remote_desktop lib directories.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`gnome_remote_desktop_manage_lib_dirs',`
	gen_require(`
		type gnome_remote_desktop_var_lib_t;
	')

	files_search_var_lib($1)
	manage_dirs_pattern($1, gnome_remote_desktop_var_lib_t, gnome_remote_desktop_var_lib_t)
')


########################################
## <summary>
##	All of the rules required to administrate
##	an gnome_remote_desktop environment
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <param name="role">
##	<summary>
##	Role allowed access.
##	</summary>
## </param>
## <rolecap/>
#
interface(`gnome_remote_desktop_admin',`
	gen_require(`
		type gnome_remote_desktop_t;
		type gnome_remote_desktop_var_lib_t;
	')

	allow $1 gnome_remote_desktop_t:process { signal_perms };
	ps_process_pattern($1, gnome_remote_desktop_t)

	tunable_policy(`deny_ptrace',`',`
		allow $1 gnome_remote_desktop_t:process ptrace;
	')

	files_search_var_lib($1)
	admin_pattern($1, gnome_remote_desktop_var_lib_t)
	optional_policy(`
		systemd_passwd_agent_exec($1)
		systemd_read_fifo_file_passwd_run($1)
	')
')

## <summary>
##	Read and write to TCP socket
## </summary>
## <desc>
##	<p>
##	Allow the specified domain to read and write to
##  gnome_remote_desktop_port_t TCP socket
##	</p>
## </desc>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`gnome_remote_desktop_rw_tcp_sockets', `
	gen_require(`
		type gnome_remote_desktop_t;
	')

	allow $1 gnome_remote_desktop_t:tcp_socket rw_socket_perms;
')
