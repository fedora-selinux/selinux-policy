## <summary>ClamAV Virus Scanner</summary>

########################################
## <summary>
##	Execute a domain transition to run clamd.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed to transition.
##	</summary>
## </param>
#
interface(`clamav_domtrans',`
	gen_require(`
		type clamd_t, clamd_exec_t;
	')

	domtrans_pattern($1, clamd_exec_t, clamd_t)
')

########################################
## <summary>
##	Connect to run clamd.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`clamav_stream_connect',`
	gen_require(`
		type clamd_t, clamd_var_run_t;
	')

	files_search_pids($1)
	stream_connect_pattern($1, clamd_var_run_t, clamd_var_run_t, clamd_t)
')

########################################
## <summary>
##	Allow the specified domain to append
##	to clamav log files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`clamav_append_log',`
	gen_require(`
		type clamd_var_log_t;
	')

	logging_search_logs($1)
	allow $1 clamd_var_log_t:dir list_dir_perms;
	append_files_pattern($1, clamd_var_log_t, clamd_var_log_t)
')

########################################
## <summary>
##	Read clamav configuration files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`clamav_read_config',`
	gen_require(`
		type clamd_etc_t;
	')

	files_search_etc($1)
	allow $1 clamd_etc_t:file read_file_perms;
')

########################################
## <summary>
##	Search clamav libraries directories.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`clamav_search_lib',`
	gen_require(`
		type clamd_var_lib_t;
	')

	files_search_var_lib($1)
	allow $1 clamd_var_lib_t:dir search_dir_perms;
')

########################################
## <summary>
##	Execute a domain transition to run clamscan.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed to transition.
##	</summary>
## </param>
#
interface(`clamav_domtrans_clamscan',`
	gen_require(`
		type clamscan_t, clamscan_exec_t;
	')

	domtrans_pattern($1, clamscan_exec_t, clamscan_t)
')

########################################
## <summary>
##	Execute clamscan without a transition.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`clamav_exec_clamscan',`
	gen_require(`
		type clamscan_exec_t;
	')

	can_exec($1, clamscan_exec_t)
')

########################################
## <summary>
##	Manage clamd pid content.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`clamav_manage_clamd_pid',`
	gen_require(`
		type clamd_var_run_t;
	')

	manage_dirs_pattern($1, clamd_var_run_t, clamd_var_run_t)
	manage_files_pattern($1, clamd_var_run_t, clamd_var_run_t)
')

#######################################
## <summary>
##      Read clamd state files.
## </summary>
## <param name="domain">
##      <summary>
##      Domain allowed access.
##      </summary>
## </param>
#
interface(`clamav_read_state_clamd',`
        gen_require(`
                type clamd_t;
        ')

        kernel_search_proc($1)
        ps_process_pattern($1, clamd_t)
')

#######################################
## <summary>
##      Execute clamd server in the clamd domain.
## </summary>
## <param name="domain">
##      <summary>
##      Domain allowed to transition.
##      </summary>
## </param>
#
interface(`clamd_systemctl',`
        gen_require(`
                type clamd_t;
                type clamd_unit_file_t;
        ')

        systemd_exec_systemctl($1)
	init_reload_services($1)
        systemd_read_fifo_file_passwd_run($1)
        allow $1 clamd_unit_file_t:file read_file_perms;
        allow $1 clamd_unit_file_t:service manage_service_perms;

        ps_process_pattern($1, clamd_t)
')

########################################
## <summary>
##	All of the rules required to administrate
##	an clamav environment
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <param name="role">
##	<summary>
##	The role to be allowed to manage the clamav domain.
##	</summary>
## </param>
## <rolecap/>
#
interface(`clamav_admin',`
	gen_require(`
		type clamd_t, clamd_etc_t, clamd_tmp_t;
		type clamd_var_log_t, clamd_var_lib_t, clamd_var_run_t;
		type clamscan_t, clamscan_tmp_t, clamd_initrc_exec_t;
		type freshclam_t, freshclam_var_log_t;
		type clamd_unit_file_t;
	')

	allow $1 clamd_t:process signal_perms;
	ps_process_pattern($1, clamd_t)

	tunable_policy(`deny_ptrace',`',`
		allow $1 clamd_t:process ptrace;
		allow $1 clamscan_t:process ptrace;
		allow $1 freshclam_t:process ptrace;
	')

	allow $1 clamscan_t:process signal_perms;
	ps_process_pattern($1, clamscan_t)

	allow $1 freshclam_t:process signal_perms;
	ps_process_pattern($1, freshclam_t)

	init_labeled_script_domtrans($1, clamd_initrc_exec_t)
	domain_system_change_exemption($1)
	role_transition $2 clamd_initrc_exec_t system_r;
	allow $2 system_r;

	clamd_systemctl($1)
	admin_pattern($1, clamd_unit_file_t)
	allow $1 clamd_unit_file_t:service all_service_perms;

	files_list_etc($1)
	admin_pattern($1, clamd_etc_t)

	files_list_var_lib($1)
	admin_pattern($1, clamd_var_lib_t)

	logging_list_logs($1)
	admin_pattern($1, clamd_var_log_t)

	files_list_pids($1)
	admin_pattern($1, clamd_var_run_t)

	files_list_tmp($1)
	admin_pattern($1, clamd_tmp_t)

	admin_pattern($1, clamscan_tmp_t)

	admin_pattern($1, freshclam_var_log_t)

	optional_policy(`
		systemd_passwd_agent_exec($1)
		systemd_read_fifo_file_passwd_run($1)
	')

')
